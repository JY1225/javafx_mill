package cn.greatoo.easymill.ui.set.cnc;

import javafx.beans.value.ChangeListener;
import javafx.beans.value.ObservableValue;
import javafx.event.ActionEvent;
import javafx.fxml.FXML;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.control.TextInputControl;
import javafx.scene.layout.GridPane;
import cn.greatoo.easymill.util.NumericTextField;
import cn.greatoo.easymill.util.TextInputControlListener;
import cn.greatoo.easymill.workpiece.WorkPiece;
import cn.greatoo.easymill.workpiece.WorkPiece.Dimensions;

public class CNCFinishedWPViewController implements TextInputControlListener{
	@FXML
	private GridPane generalGridPane;
	@FXML
	private NumericTextField fullnumL;
	@FXML
	private NumericTextField fullnumW;
	@FXML
	private NumericTextField fullnumH;
	@FXML
	private Button hResetBt;
	@FXML
	private NumericTextField fullnumWT;
	@FXML
	private Button calculateBt;
	@FXML
	private Button resetBt;
	@FXML
	private Button wResetBt;
	@FXML
	private Button LResetBt;
	public WorkPiece finishedWorkPiece;

	public void init() {
		
		fullnumL.setOnChange(new ChangeListener<Float>() {
			@Override
			public void changed(final ObservableValue<? extends Float> observable, final Float oldValue, final Float newValue) {  	      		
        		if (newValue!= null) {
                    if ((oldValue == null) || (!oldValue.equals(newValue))) {
            			finishedWorkPiece.getDimensions().setDimension(Dimensions.LENGTH, newValue);
                    }
        		} else {
        			fullnumL.setText("");
        		}	
			}
		});
	
		fullnumW.setOnChange(new ChangeListener<Float>() {
			@Override
			public void changed(final ObservableValue<? extends Float> observable, final Float oldValue, final Float newValue) {
        		float width =  newValue;
        		if (width > 0) {
            		finishedWorkPiece.getDimensions().setDimension(Dimensions.WIDTH, width);
        		} else {
        			fullnumW.setText("");
        		}
			}
		});		
		
		fullnumH.setOnChange(new ChangeListener<Float>() {
			@Override
			public void changed(final ObservableValue<? extends Float> observable, final Float oldValue, final Float newValue) {
        		float length =  newValue;
        		if (length > 0) {
            		finishedWorkPiece.getDimensions().setDimension(Dimensions.LENGTH, length);
        		} else {
        			fullnumH.setText("");
        		}
			}
		});	
		
		fullnumWT.setOnChange(new ChangeListener<Float>() {
			@Override
			public void changed(final ObservableValue<? extends Float> observable, final Float oldValue, final Float newValue) {
        		float weight =  newValue;
        		if (weight > 0) {
            		finishedWorkPiece.setWeight(weight);
        		} else {
        			fullnumWT.setText("");
        		}
			}
		});	
		setTextFieldListener(this);
	}
	@FXML
	public void hResetBtAction(ActionEvent event) {
		
	}
	
	@FXML
	public void calculateBtAction(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#resetBt].onAction
	@FXML
	public void resetBtAction(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#wResetBt].onAction
	@FXML
	public void wResetBtAction(ActionEvent event) {
		// TODO Autogenerated
	}
	// Event Listener on Button[#LResetBt].onAction
	@FXML
	public void LResetBtAction(ActionEvent event) {
		// TODO Autogenerated
	}
	
	public WorkPiece getFinishedWorkPiece() {
		return this.finishedWorkPiece;
	}
	
	public void setTextFieldListener(final TextInputControlListener listener) {
		fullnumL.setFocusListener(listener);
		fullnumW.setFocusListener(listener);
		fullnumH.setFocusListener(listener);
		fullnumWT.setFocusListener(listener);
	}
	@Override
	public void closeKeyboard() {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void textFieldFocussed(TextInputControl textInputControl) {
		// TODO Auto-generated method stub
		
	}
	@Override
	public void textFieldLostFocus(TextInputControl textInputControl) {
		// TODO Auto-generated method stub
		
	}
}
